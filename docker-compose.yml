version: '3.8'

services:
  # PostgreSQL with pgvector
  postgres:
    image: ankane/pgvector:latest
    container_name: pgvector-dev
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres_loan_app_schema_full.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - loan-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin (optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - loan-network

  # NestJS Application
  loan-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: loan-backend-app
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      DATABASE_TYPE: ${DATABASE_TYPE}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SYNCHRONIZE: ${SYNCHRONIZE}
      LOGGING: ${LOGGING}
      AI_MODEL_ENDPOINT: ${AI_MODEL_ENDPOINT}
      AI_API_KEY: ${AI_API_KEY}
      VECTOR_DIMENSION: ${VECTOR_DIMENSION}
      VECTOR_TABLE_PREFIX: ${VECTOR_TABLE_PREFIX}
      LOG_LEVEL: ${LOG_LEVEL}
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - loan-network
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  loan-network:
    driver: bridge
